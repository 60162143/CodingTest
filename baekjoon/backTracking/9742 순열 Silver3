
# 문제 : https://www.acmicpc.net/problem/9742

# keyPoint
# 1. 백트래킹을 이용하여 탐색
# 2. try except 구문을 사용해서 오류시에도 안전한 예외처리 하자!!!

# code
from sys import stdin

# 백트래킹 탐색
def backtraking() :
    global answer   # 결과부분 출력할 전역 변수
    global count    # 순열의 몇번째인지를 나타내는 전역 변수
    
    # 순열이 완성된 경우
    if len(result) == len(str) :
        
        count += 1  # 순열 count +1
        
        # 완성된 순열의 순서와 찾을 위치가 같은 경우
        if count == int(num) :
            answer = "".join(result)    # 결과값에 결과 저장
        
        return
    
    # 문자열의 모든 item 탐색
    for idx, item in enumerate(str) :
        if item not in result : # 순열의 요소에 사용되지 않은 item인 경우
            result.append(item) # item 추가
            backtraking()   # 백트래킹 탐색
            result.pop()    # item 제거


# 테스트 케이스의 수를 입력받지 않기 때문에 입력 부분에서 오류가 날 수 있음
# try except 구문 사용으로 에러가 발생했을 때 except 코드로 예외처리!!
while True :
    try :   # 입력 부분의 에러 발생 위험때문에 try 사용
        t = stdin.readline().strip()    # 한줄 입력
        
        if t :  # 입력받은 내용이 있을 경우
            str, num = t.split()    # 분리
            
            result = [] # 완성된 순열의 문자들을 담을 배열
            
            count = 0   # 완성된 순열의 위치
            answer = "No permutation"    # 결과 값 저장할 변수
            
            backtraking()   # 백트래킹 탐색
            
            print(t + " = " + answer)   # 결과  출력
        else :  # 입력받은 내용이 없을 경우 종료
            break
    except :    # 입력의 오류가 났을 경우 종료
        break
