
# 문제 : https://www.acmicpc.net/problem/14754

# keyPoint
# 1. 입력받은 배열의 가로, 세로 최댓값을 구해야 함
# 2. map 함수로 2차원배열의 합계인 sum을 구할수 있음!!

# code
from sys import stdin
n, m = map(int, stdin.readline().split())  # 가로, 세로 길이 입력
pizza = []  # 피자 높이 값을 담을 배열
answer = set()  # 높이가 최대인 값들을 담을 집합, 중복방지를 위해 집합으로 선언

# 피자 높이 값을 입력
for i in range(n) :
    pizza.append(list(map(int, stdin.readline().split())))
    answer.add(max(pizza[i]))  # 가로 행의 피자 높이 최댓값

# 세로 방향 값을 구해기 위해 반복
for j in range(m) :
    # 세로 방향 피자 높이의 최댓값
    answer.add(max([pizza[i][j] for i in range(n)]))

# 전체 피자 높이 합계에서 최댓값들의 합계의 차
print(sum(map(sum, pizza)) - sum(answer))
