
# 문제 : https://www.acmicpc.net/problem/1080

# keyPoint
# 1. 부분행렬을 뒤집을 때 부분행렬의 맨 왼쪽 상단의 값과 비교하며 뒤집기
# 2. 행렬이 같을 경우 값은 0
# 3. readline으로 읽을 때 개행문자기 읽힐 수 있으므로 strip() 함수 사용 ( 후행문자만 제거할 경우 rstrip() )
# 4. 리스트 비교시 비교 연산자 '==' 사용 가능 ( 타입도 같아야 함 )

# code
from sys import stdin
n, m = map(int, stdin.readline().split())  # n, m 입력

arr1 = [list(stdin.readline().strip()) for _ in range(n)]  # 연산 전 행렬 입력
arr2 = [list(stdin.readline().strip()) for _ in range(n)]  # 연산 후 행렬 입력

count = 0  # 연산 횟수

if n >= 3 and m >= 3 :  # 행렬의 크기가 3 * 3 이상일 경우만 진행
    # 부분 행렬 찾아서 반복
    for i in range(n - 2) :
        for j in range(m - 2) :
            if arr1[i][j] != arr2[i][j] :  # 부분행렬의 우측 상단 값 비교, 다를 경우 전체 값 뒤집기
                count += 1  # 연산횟수 증가

                # 전체 값 뒤집기
                for k in range(i, i + 3) :
                    for l in range(j, j + 3) :
                        arr1[k][l] = '0' if arr1[k][l] == '1' else '1'
elif arr1 == arr2 :  # 리스트가 같을 경우 연산횟수 0
    count = 0
else :  # 행렬의 크기가 3 보다 작고 리스트가 같지 않을 경우
    count = -1

# 전제 리스트가 같은지 비교
for i in range(n) :
    for j in range(m) :
        if arr1[i][j] != arr2[i][j] :  # 리스트 값이 같지 않을 경우
            count = -1
            break

print(count)
