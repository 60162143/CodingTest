
# 문제 : https://www.acmicpc.net/problem/11724

# keyPoint
# 1. BFS 탐색으로 문제풀이
# 2. DFS로 풀던 BFS로 풀던 상관없지만 둘다 연습해놓자!! 최단거리는 BFS 이외는 DFS!!!

# code
from sys import stdin
import sys
from collections import deque

sys.setrecursionlimit(10**6)    # 재귀 깊이 증가 보통 10**6로 설정하면 됨

# DFS 탐색
def dfs(index) :
    visited[index] = 1
    
    for item in graph[index] :
        if visited[item] == 0 :
            dfs(item)

    return

# BFS 탐색, 모든 재귀 <==> 반복문 호환 가능
def bfs(index) :
    queue = deque()
    queue.append(index)
    visited[index] = 1
    
    while queue :
        num = queue.popleft()
        
        for item in graph[num] :
            if visited[item] == 0 :
                queue.append(item)
                visited[item] = 1
    
n, m = map(int, stdin.readline().split())

graph = [[] for _ in range(n + 1)]
visited = [0 for _ in range(n + 1)]

result = 0

for i in range(m) :
    x, y = map(int, stdin.readline().split())
    
    graph[x].append(y)
    graph[y].append(x)
    
for idx in range(1, n + 1) :
    # DFS 탐색
    # if visited[idx] == 0 :
    #     dfs(idx)
    #     result += 1
    
    # BFS 탐색
    if visited[idx] == 0 :
        bfs(idx)
        result += 1
        
print(result)
