
# 문제 : https://www.acmicpc.net/problem/16173

# keyPoint

# code
#################### BFS ####################
from sys import stdin
from collections import deque

# BFS 탐색
def bfs() :
    queue = deque()  # BFS 탐색을 위한 queue
    queue.append((0, 0))  # 시작점 삽입

    # queue가 빌 때까지 반복
    while queue :
        x, y = queue.popleft()  # queue의 맨 앞의 값 pop

        # 좌표의 범위가 벗어났거나 점프 값이 0인 경우
        if x >= n or y >= n or map[x][y] == 0 :
            continue

        # 최종점에 도달한 경우
        if map[x][y] == -1 :
            print("HaruHaru")
            exit()  # 강제 종료

        dx = x + map[x][y]  # 아래로 이동하는 x값
        dy = y + map[x][y]  # 오른쪽으로 이동하는 y값

        if dx < n :  # 아래로 이동한 x값이 범위 안에 있는 경우
            queue.append((dx, y))  # queue에 좌표 삽입
        
        if dy < n :  # 오른쪽으로 이동한 y값이 범위 안에 있는 경우
            queue.append((x, dy))  # queue에 좌표 삽입
            
    print("Hing")  # 탐색을 완료했지만 최종점에 도달하지 못한 경우
    

n = int(stdin.readline())  # n 입력

map = [list(map(int, stdin.readline().split())) for _ in range(n)]  # 지도 값 입력

bfs()  # BFS 탐색 시작
#################### BFS ####################

#################### DFS ####################
# from sys import stdin

# DFS 탐색
# def dfs(x, y) :
      # 좌표가 범위를 벗어났거나 점프 값이 0인 경우
#     if x >= n or y >= n or map[x][y] == 0 :
#         return

      # 좌표가 최종점에 도달한 경우
#     if map[x][y] == -1 :
#         print("HaruHaru")
#         exit()  # 강제 종료
    
#     dx = x + map[x][y]  # 아래족으로 이동한 x값
#     dy = y + map[x][y]  # 오른쪽으로 이동한 y값
    
#     dfs(dx, y)  # 아래쪽으로 이동 후 DFS 탐색
#     dfs(x, dy)  # 오른쪽으로 이동 후 DFS 탐색
    
# n = int(stdin.readline())

# map = [list(map(int, stdin.readline().split())) for _ in range(n)]

# dfs(0, 0)  # DFS 탐색

# print("Hing")  # 최종 점을 찾지 못한 경
#################### DFS ####################
