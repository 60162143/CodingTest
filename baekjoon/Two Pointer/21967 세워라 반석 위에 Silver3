
# 문제 : https://www.acmicpc.net/problem/21967

# keyPoint
# 1. 최대값과 최소값을 큐로 갱신하면서 윈도우 슬라이딩으로 해결
# 2. 어렵다...............................................
# 3. 범위가 1,000,000이 넘어갈 경우 O(n)으로 풀 생각 해라!

# code
from sys import stdin
from collections import deque

# 입력
n = int(input())
arr = list(map(int, stdin.readline().split()))

start = 0   # 시작 인덱스
max_length = 0  # 부분 수열의 최대 길이

min_deque = deque() # 최소값을 추적하기 위한 큐
max_deque = deque() # 최대값을 추적하기 위한 큐

# 전체 원소를 한번씩 탐색
for end in range(n) :
    
    # 최소값 큐 갱신
    # 큐의 끝의 요소가 현재 요소보다 크거나 같다면 최소값이 될 수 없기 때문에
    # pop을 통해 끝 요소 제거
    while min_deque and arr[min_deque[-1]] >= arr[end] :
        min_deque.pop()
    min_deque.append(end)   # 현재 요소로 최소값 갱신
    
    # 최대값 큐 갱신
    # 큐의 끝의 요소가 현재 요소보다 작거나 같다면 최대값이 될 수 없기 때문에
    # pop을 통해 끝 요소 제거
    while max_deque and arr[max_deque[-1]] <= arr[end] :
        max_deque.pop()
    
    max_deque.append(end)   # 현재 요소로 최대값 갱신
    
    # 현재 윈도우의 최대값과 최소값의 차이가 2인지 확인
    while arr[max_deque[0]] - arr[min_deque[0]] > 2 :
        start += 1  # 시작점을 이동시켜 윈도우 축소
        
        # 최대값 큐에 이전 시작점이 포함되지 않을 경우 요소 제거
        if max_deque[0] < start :
            max_deque.popleft()
        
        # 최소값 큐에 이전 시작점이 포함되지 않을 경우 요소 제거
        if min_deque[0] < start :
            min_deque.popleft()
            
    max_length = max(max_length, end - start + 1)   # 최대 길이 갱신

print(max_length)
