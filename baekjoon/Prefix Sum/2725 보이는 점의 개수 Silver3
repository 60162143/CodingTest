
# 문제 : https://www.acmicpc.net/problem/2725

# keyPoint
# 1. 누적합을 이용하여 보이는점을 1부터 계산
# 2. 유클리드 호제법 기억하자!! -> a, b = b, a % b

# code
from sys import stdin

t = int(input())    # 입력

dp = [0, 3] # 누적합 수를 담을 dp

# 1000개의 데이터를 미리 구하기
for i in range(2, 1001) :
    tmp = 0  # i만큼 거리까지의 보이는 점의 개수
    
    # 1부터 i - 1까지 반복하면서 최대공약수가 있는지 확인
    # 최대공약수를 확인해서 나누어서 최대공약수가 1이면 보이는점
    # 최대공약수는 유클리드 호제법으로 구함!
    for j in range(1, i) :
        a, b = i, j
        
        # 유클리드 호제법을 이용한 최대공약수 계산
        while b > 0 :
            a, b = b, a % b
        
        # 최대공약수가 1인경우 나누어 떨어지지 않으므로 보이는점, 결과값 갱신
        if a == 1 :
            tmp += 1
    
    dp.append(dp[i - 1] + tmp * 2)  # i까지의 보이는 점을 누적합으로 갱신

for _ in range(t) :
    n = int(stdin.readline())   # 입력
    
    print(dp[n])
