
# 문제 : https://www.acmicpc.net/problem/24479

# keyPoint
# 1. DFS 재귀 탐색을 통한 문제 해결
# 2. 전역변수 count로 방문 순번을 저장
# 3. 재귀 탐색 시 sys.setrecursionlimit(10**6)으로 재귀 깊이 설정 필요

# code
from sys import stdin
import sys
sys.setrecursionlimit(10**6)  # 재귀 깊이 설정

# DFS 재귀 탐색
def dfs(graph, r) :
    global count  # 전역 변수 ( 탐색 순서를 저장하기 위함 )

    if visited[r] == 0 :  # 방문 하지 않은 경우 방문 진행
        visited[r] = count  # 방문 내역에 방문 순서 저장

    # 인접한 정점 확인
    for item in sorted(graph[r]) :
        if visited[item] == 0 :  # 인접 정점이 방문되지 않은 경우
            count += 1  # 탐색 순서 증가
            dfs(graph, item)  # 인점 정점으로 dfs 탐색
        

# 입력
n, m, r = map(int, stdin.readline().split())

visited = [0 for _ in range(n + 1)]  # 방문 여부
graph = [[] for _ in range(n + 1)]  # 그래프
count = 1  # 방문 순서

# 그래프 입력
for i in range(m) :
    f, s = map(int, stdin.readline().split())
    graph[f].append(s)
    graph[s].append(f)
    
dfs(graph, r)  # DFS 탐색

#  방문되었을 경우 순서 출력, 미방문시 0 출력
for i in range(1, len(visited)) :
    print(visited[i]) if visited[i] != 0 else print(0)
