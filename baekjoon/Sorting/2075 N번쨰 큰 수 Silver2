
# 문제 : https://www.acmicpc.net/problem/2075

# keyPoint
# 1. 메모리 제한이 있기 때문에 배열의 크기를 최대한 줄이는 것이 관건
# 2. min heap 알고리즘을 사용하면서 배열의 크기가 n을 넘어가면 heappop으로 배열의 크기를 n으로 유지
# 3. 최종적으로 n ~ 1순위까지 배열에 들어있으므로 heappop을 통해 n번째 순위의 값을 추출

# code
from sys import stdin
from heapq import heappop, heappush

n = int(stdin.readline())  # 입력
queue = []  # heap 자료구조를 담을 배열

for _ in range(n) :
    lt = list(map(int, stdin.readline().split()))  # 입력

    # 입력받은 리스트 순회
    for item in lt :
        heappush(queue, item)  # 입력받은 값을 heap 배열에 추가

        # heap 배열의 크기가 n을 넘어가는 경우 n번째 순위보다 작은것을 보장하기 때문에 heappop을 통해 맨 앞의 값 제거
        if len(queue) > n :
            heappop(queue)
            
print(heappop(queue))
