
# 문제 : https://www.acmicpc.net/problem/24444

# keyPoint
# 1. BFS를 이용한 탐색 문제

# code
from sys import stdin
from collections import deque

# 입력
n, m, r = map(int, stdin.readline().split())

graph = [[] for _ in range(n + 1)]  # 그래프 배열
visited = [0 for _ in range(n + 1)]  # 방문 여부

# 입력
for i in range(m) :
    x, y = map(int, stdin.readline().split())

    # 양방향으로 그래프에 입력
    graph[x].append(y)
    graph[y].append(x)
    
queue = deque([r])  # BFS에서 사용할 queue
visited[r] = 1  # 시작 정점의 방문 확인
count = 1  # 방문 차례를 나타내는 전역 변수

# 큐가 빌때까지 반복
while queue :
    x = queue.popleft()  # 첫번째에 있는 값 pop

    # 현재 정점에서 인접한 점 모두 확인 ( 오름차순 정렬 )
    for item in sorted(graph[x]) :
        if visited[item] == 0 :  # 인접 정점이 방문되어 있지 않은 경우
            count += 1  # 방문 차례 증가
            visited[item] = count  # 방문 여부 확인
            queue.append(item)  # 큐에 인접 정점 추가

# 출
for i in range(1, n + 1) :
    print(visited[i])
