
# 문제 : https://www.acmicpc.net/problem/11497

# keyPoint : 
# 1. 제일 큰 수를 중앙에 놓고 왼쪽 오른쪽으로 수들을 넣으면 인접한 수들의 차가 제일 작음

# code
from sys import stdin
from collections import deque

# 입력
t = int(stdin.readline())

for _ in range(t) :
    # 입력
    n = int(stdin.readline())
    tree = sorted(list(map(int, stdin.readline().split())))  # 입력받은 수들을 정렬
    
    result = deque([tree.pop()])  # 가장 큰수를 queue에 삽입
    mx = 0  # 결과 값
    
    left = True  # 왼쪽에 넣을껀지 오른쪽에 넣을껀지 확인하는 Flag

    # 리스트가 빌때까지 반복
    while tree :
        if left :  # 왼쪽에 넣을 차례인 경우
            result.appendleft(tree.pop())  # 큐의 왼쪽에 값 삽입
            left = False  # Flag 변경
        else :  # 오른쪽에 넣을 차례인 경우
            result.append(tree.pop())  # 큐의 오른쪽에 값 삽입
            left = True  # Flag 변경

    # 큐의 인접한 수들의 차 구하기
    for i in range(n - 1, -1, -1) :
        mx = max(mx, abs(result[i] - result[i - 1]))  # 인접한 차의 최댓값 갱신
        
    print(mx)
