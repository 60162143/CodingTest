
# 문제 : https://www.acmicpc.net/problem/5237

# keyPoint
# 1. DFS 탐색을 이용하여 문제풀이
# 2. 문제 출력 예시 잘 보고 풀자... 10분 날려먹었다

# code
from sys import stdin

t = int(input())

# DFS 탐색
def dfs(index) :
    visited[index] = 1  # 방문 처리
    
    # 인접한 노드 확인
    for item in graph[index] :
        if visited[item] == 0 : # 방문하지 않은 경우
            dfs(item)   # DFS 탐색

for _ in range(t) :
    arr = list(map(int, stdin.readline().split()))
    
    n = arr[0]
    k = arr[1]
    
    graph = [[] for _ in range(n)]
    visited = [0 for _ in range(n)]
        
    # 양방향 그래프 SET
    for i in range(1, k + 1) :
        graph[arr[2 * i]].append(arr[2 * i + 1])
        graph[arr[2 * i + 1]].append(arr[2 * i])
        
    dfs(0)
    
    # 모든 노드 방문 했는지 확인
    if sum(visited) == n :
        print("Connected.")
    else :
        print("Not connected.")
