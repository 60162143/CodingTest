
# 문제 : https://www.acmicpc.net/problem/2108

# keyPoint
# 1. collections의 Counter를 사용하여 같은 데이터의 개수를 보다 쉽게 셀 수 있음
# 2. Counter의 most_common() 함수를 사용하여 최빈값을 많은 순서대로 나열 가능 ( 순서는 따로 정렬 해줘야 함 )
# 3. round(값, 자리수)로 소수점 나타낼 수 있음
# 4. 아무때나 힙이나 큐 쓰지 말자...

# code
from sys import stdin
from collections import Counter

n = int(stdin.readline())  # n 입력
lt = []  # 정수 입력 받을 배열 선언

for i in range(n) :
    lt.append(int(stdin.readline()))  # 정수 입력
    
lt.sort()  # 평균, 최대, 최소, 중앙, 최빈 값 계산을 위한 정렬

print(round(sum(lt) / n))  # 소수점 1자리에서 반올림한 산술 평균

print(lt[len(lt) // 2])  # 중앙값 계산

counter = Counter(lt).most_common()  # 같은 데이터 개수 계산하기 위해 Counter 사용

# 최빈값의 배열 크기가 1 이상이고 최빈값이 여러개인 경우 ( 첫번째 값의 데이터 수와 두번째 값의 데이터 수가 같으면 최빈값이 여러개 라는 의미 )
if len(counter) > 1 and counter[0][1] == counter[1][1] :
    print(counter[1][0])
else :
    print(counter[0][0])

print(lt[n - 1] - lt[0])  # 최댓값에서 최솟값의 차 계산
