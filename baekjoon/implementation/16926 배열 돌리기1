
# 문제 : https://www.acmicpc.net/problem/16926

# keyPoint :
# 1. 2차원배열로 입력받은 배열의 회전은 각 껍질별로 독립적으로 회전함
# 2. 즉 2차원 배열을 1차원 배열로 변환 후 deque의 rotate 함수를 이용하면 문제를 쉽게 풀 수 있음
# 3. 껍질의 부분을 나눠서 top, right, bottom, left 순으로 1차원 배열에 넣음
# 4. 배열을 역순으로 출력하고 싶을 때는 sorted(reverse=True)가 아니라 슬라이싱[::-1]을 이용하자

# code :
from sys import stdin
from collections import deque

n, m, r = map(int, stdin.readline().split())  # n, m, r 입력

arr = [list(map(int, stdin.readline().split())) for _ in range(n)]  # 배열 입력

queue = deque()  # rotate를 위한 deque 선언

mn = min(n, m) // 2  # 껍질의 개수 ( n과 m의 최소를 2로 나눈 값만큼 껍질이 생김 )
for i in range(mn) :
    queue.clear()  # deQueue 초기화
    # 1차원 배열로 변환
    queue.extend(arr[i][i : m - i])  # 껍질의 top 부분
    queue.extend([j[m - i - 1] for j in arr[i + 1 : n - i]])  # 껍질의 right 부분
    queue.extend(arr[n - i - 1][i : m - i - 1][::-1])  # 껍질의 bottom 부분
    queue.extend([j[i] for j in arr[i + 1 : n - i - 1]][::-1])  # 껍질의 left 부분

    queue.rotate(-r)  # 배열 회전, 음수로 설정 시 반시계 방향으로 회전

    # 회전한 1차원 배열을 다시 2차원 배열로 변환
    for j in range(i, m - i) :  # 배열의 top 부분
        arr[i][j] = queue.popleft()
        
    for j in range(i + 1, n - i) :  # 배열의 right 부분
        arr[j][m - i - 1] = queue.popleft()
        
    for j in range(m - i - 2, i - 1, -1) :  # 배열의 bottom 부분
        arr[n - i - 1][j] = queue.popleft()
        
    for j in range(n - i - 2, i, -1) :  # 배열의 left 부분
        arr[j][i] = queue.popleft()

for i in arr :
    print(" ".join(list(map(str, i))))
