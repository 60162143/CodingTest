
# 문제 : https://www.acmicpc.net/problem/1463

# keyPoint
# 1. dp를 이용하여 바텀업으로 해결
# 2. 탑타운으로도 가능

# code
from sys import stdin

# 입력
n = int(stdin.readline())

dp = [1000000 for _ in range(1000001)]  # dp

dp[1] = 0  # 1은 횟수를 0으로 설정

# 리스트 순회
for i in range(1, n) :
    dp[i + 1] = min(dp[i] + 1, dp[i + 1])  # 1을 뺀 횟수, 다음값과 비교하여 작은값으로 설정
    
    if i * 2 <= 1000001 :  # 수의 제한이 10^^6까지 이므로 넘어가는 수는 계산X
        dp[i * 2] = min(dp[i] + 1, dp[i * 2])  # 2배를 곱한 수와 비교하여 작은 횟수로 설정
    if i * 3 <= 1000001 :  # 수의 제한이 10^^6까지 이므로 넘어가는 수는 계산X
        dp[i * 3] = min(dp[i] + 1, dp[i * 3])  # 3배를 곱한 수와 비교하여 작은 횟수로 설정
    
print(dp[n])

##### Top Down ####
from sys import stdin

n = int(input())

dp = [1e9 for _ in range(n + 1)]
dp[n] = 0

for idx in range(n, 0, -1) :
    if idx % 3 == 0 :
        dp[idx // 3] = min(dp[idx // 3], dp[idx] + 1)
    
    if idx % 2 == 0 :
        dp[idx // 2] = min(dp[idx // 2], dp[idx] + 1)
    
    dp[idx - 1] = min(dp[idx - 1], dp[idx] + 1)
    
print(dp[1])
