
# 문제 : https://www.acmicpc.net/problem/11052

# keyPoint
# 1. 1부터 n까지 순회하면서 i번째일 경우 현재의 카드팩과 dp[j] + dp[i - j]의 짝들의 합의 최댓값으로 dp갱신
# 2. 4일 경우 모든 경우의 수인 (1, 3), (2, 2), (3, 1)이 아닌 중앙까지만 봐도 모든 경우의 수를 다 계산한 것과 같음

# code
from sys import stdin

# 입력
n = int(stdin.readline())
card = list(map(int, stdin.readline().split()))

dp = [0 for _ in range(n + 1)]  # dp

# 리스트 순회
for i in range(1, n + 1) :
    dp[i] = card[i - 1]  # 초기에 현재 위치 카드팩 금액 입력
    for j in range(1, i // 2 + 1) :  
        # 합이 i가 되는 짝들의 합의 최댓값으로 dp 갱신( 겹치는 짝들은 1번만 계산하기 위해 중앙까지만 계산 )
        dp[i] = max(dp[i], dp[j] + dp[i - j])
        
print(dp[n])
