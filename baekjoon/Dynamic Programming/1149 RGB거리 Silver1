
# 문제 : 

# keyPoint 
# 1. dp를 이용하여 R, G, B색의 최솟값을 구하면서 바텀업으로 계산

# code
from sys import stdin

# 입력
n = int(stdin.readline())
cost = [list(map(int, stdin.readline().split())) for _ in range(n)]

dp = [[0, 0, 0] for _ in range(n)]  # dp

# 리스트 순회
for i in range(n) :
    for j in range(3) :  # 세가지 색상을 모두 확인
        if i == 0 :  # 처음 값 넣어줌
            dp[i][j] = cost[i][j]
        else :  # 각 색깔 별로 연속될 수 없기 때문에 현재 색깔과 다른 색들의 최솟값을 더해줌
            dp[i][j] = cost[i][j] + min(dp[i - 1][(j + 1) % 3], dp[i - 1][(j + 2) % 3])

print(min(dp[n - 1]))
